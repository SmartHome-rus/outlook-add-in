!function(){const e="outlook-scanner-github-v1",o="https://smarthome-rus.github.io/outlook-add-in/",t=[o,o+"commands.html",o+"taskpane.html",o+"commands.js",o+"taskpane.js",o+"polyfill.js",o+"sw.js"];console.log("üîß Service Worker script loaded"),self.addEventListener("install",o=>{console.log("üîÑ Service Worker: Installing"),o.waitUntil(caches.open(e).then(o=>(console.log("üì¶ Service Worker: Opening cache:",e),console.log("üìù URLs to cache:",t),Promise.allSettled(t.map(e=>(console.log("üì• Attempting to cache:",e),o.add(e).then(()=>{console.log("‚úÖ Successfully cached:",e)}).catch(o=>(console.warn("‚ö†Ô∏è Failed to cache:",e,o.message),Promise.resolve()))))))).then(()=>(console.log("üöÄ Service Worker: Cache setup complete, forcing activation"),self.skipWaiting())).catch(e=>{console.error("‚ùå Service Worker: Install failed:",e)}))}),self.addEventListener("activate",o=>{console.log("üîÑ Service Worker: Activating"),o.waitUntil(Promise.all([caches.keys().then(o=>(console.log("üßπ Found caches:",o),Promise.all(o.map(o=>{if(o!==e)return console.log("üóëÔ∏è Deleting old cache:",o),caches.delete(o)})))),self.clients.claim().then(()=>{console.log("üëë Service Worker: Now controlling all clients")})]).then(()=>{console.log("‚úÖ Service Worker: Activation complete")}).catch(e=>{console.error("‚ùå Service Worker: Activation failed:",e)}))}),self.addEventListener("fetch",o=>{const t=o.request.url;t.includes("smarthome-rus.github.io/outlook-add-in")?(console.log("üåê Service Worker: Handling request for:",t),o.respondWith(caches.match(o.request).then(n=>n?(console.log("üì¶ Service Worker: Serving from cache:",t),n):(console.log("üîç Service Worker: Not in cache, fetching from network:",t),fetch(o.request).then(n=>{if(n&&200===n.status){console.log("üíæ Service Worker: Caching new response:",t);const c=n.clone();caches.open(e).then(e=>{e.put(o.request,c)}).catch(e=>{console.warn("‚ö†Ô∏è Failed to cache response:",t,e.message)})}return n}).catch(e=>(console.error("‚ùå Service Worker: Network fetch failed:",t,e.message),"document"===o.request.destination||t.endsWith(".html")?new Response(`\n                                    <!DOCTYPE html>\n                                    <html>\n                                    <head><title>Offline - Sensitive Data Scanner</title></head>\n                                    <body>\n                                        <h1>üîå Add-in Running Offline</h1>\n                                        <p>The Sensitive Data Scanner is working from cache.</p>\n                                        <p>Network unavailable: ${e.message}</p>\n                                        <p>Requested: ${t}</p>\n                                    </body>\n                                    </html>\n                                `,{status:200,statusText:"OK (Offline)",headers:{"Content-Type":"text/html"}}):new Response("Offline - content not available",{status:503,statusText:"Service Unavailable"}))))).catch(e=>(console.error("‚ùå Service Worker: Cache operation failed:",e),fetch(o.request))))):console.log("üö´ Service Worker: Ignoring non-localhost request:",t)}),self.addEventListener("message",o=>{console.log("üí¨ Service Worker: Received message:",o.data),o.data&&"SKIP_WAITING"===o.data.type&&(console.log("‚è≠Ô∏è Service Worker: Skipping waiting state"),self.skipWaiting()),o.data&&"GET_CACHE_STATUS"===o.data.type&&caches.open(e).then(e=>e.keys()).then(t=>{console.log("üìä Service Worker: Cache contents:",t.map(e=>e.url)),o.ports[0]?.postMessage({type:"CACHE_STATUS",cached:t.map(e=>e.url),cacheName:e})})})}();
//# sourceMappingURL=sw.js.map