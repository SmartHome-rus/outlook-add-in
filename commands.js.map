{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://sensitive-data-scanner-outlook-addin/webpack/bootstrap","webpack://sensitive-data-scanner-outlook-addin/webpack/runtime/define property getters","webpack://sensitive-data-scanner-outlook-addin/webpack/runtime/hasOwnProperty shorthand","webpack://sensitive-data-scanner-outlook-addin/webpack/runtime/make namespace object","webpack://sensitive-data-scanner-outlook-addin/./src/commands/commands.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Sensitive Data Scanner - On-Send Event Handlers\n * This file contains the core logic for scanning emails and appointments\n * for sensitive keywords and blocking sending when found.\n */\n/// <reference path=\"../types/office.d.ts\" />\n// Define the list of sensitive keywords (case-insensitive)\nconst SENSITIVE_KEYWORDS = [\n    'confidential',\n    'internal use only',\n    'secret',\n    'project-alpha',\n    'classified',\n    'restricted',\n    'proprietary',\n    'do not distribute',\n    'sensitive',\n    'private and confidential'\n];\n/**\n * Scans text content for sensitive keywords\n * @param content - The text content to scan\n * @returns Array of found keywords\n */\nfunction scanForSensitiveKeywords(content) {\n    if (!content)\n        return [];\n    const normalizedContent = content.toLowerCase();\n    const foundKeywords = [];\n    for (const keyword of SENSITIVE_KEYWORDS) {\n        if (normalizedContent.includes(keyword.toLowerCase())) {\n            foundKeywords.push(keyword);\n        }\n    }\n    return foundKeywords;\n}\n/**\n * Extracts text content from HTML body\n * @param htmlContent - HTML content to extract text from\n * @returns Plain text content\n */\nfunction extractTextFromHtml(htmlContent) {\n    if (!htmlContent)\n        return '';\n    // Remove HTML tags and decode common HTML entities\n    const textContent = htmlContent\n        .replace(/<[^>]*>/g, ' ') // Remove HTML tags\n        .replace(/&nbsp;/g, ' ') // Replace non-breaking spaces\n        .replace(/&amp;/g, '&') // Decode ampersands\n        .replace(/&lt;/g, '<') // Decode less than\n        .replace(/&gt;/g, '>') // Decode greater than\n        .replace(/&quot;/g, '\"') // Decode quotes\n        .replace(/&#39;/g, \"'\") // Decode apostrophes\n        .replace(/\\s+/g, ' ') // Replace multiple whitespace with single space\n        .trim();\n    return textContent;\n}\n/**\n * Handler for message send events (emails)\n * @param event - The Office.js event object\n */\nfunction onMessageSendHandler(event) {\n    console.log('Message send handler triggered');\n    // Get the current item (email being sent)\n    const item = Office.context.mailbox.item;\n    if (!item) {\n        console.error('No item found');\n        event.completed({ allowEvent: true });\n        return;\n    }\n    // Get the body of the email\n    item.body.getAsync(Office.CoercionType.Html, (result) => {\n        if (result.status === Office.AsyncResultStatus.Failed) {\n            console.error('Failed to get email body:', result.error);\n            // Allow sending if we can't get the body\n            event.completed({ allowEvent: true });\n            return;\n        }\n        const htmlContent = result.value;\n        const textContent = extractTextFromHtml(htmlContent);\n        console.log('Scanning email content for sensitive keywords...');\n        const foundKeywords = scanForSensitiveKeywords(textContent);\n        if (foundKeywords.length > 0) {\n            console.log('Sensitive keywords found:', foundKeywords);\n            const keywordList = foundKeywords.join(', ');\n            const errorMessage = `This email contains sensitive keywords (${keywordList}). Please review before sending.`;\n            // Block the send and show notification\n            event.completed({\n                allowEvent: false,\n                errorMessage: errorMessage\n            });\n        }\n        else {\n            console.log('No sensitive keywords found, allowing send');\n            // Allow the email to be sent\n            event.completed({ allowEvent: true });\n        }\n    });\n}\n/**\n * Handler for appointment send events (calendar invitations)\n * @param event - The Office.js event object\n */\nfunction onAppointmentSendHandler(event) {\n    console.log('Appointment send handler triggered');\n    // Get the current item (appointment being sent)\n    const item = Office.context.mailbox.item;\n    if (!item) {\n        console.error('No item found');\n        event.completed({ allowEvent: true });\n        return;\n    }\n    // Get the body of the appointment\n    item.body.getAsync(Office.CoercionType.Html, (result) => {\n        if (result.status === Office.AsyncResultStatus.Failed) {\n            console.error('Failed to get appointment body:', result.error);\n            // Allow sending if we can't get the body\n            event.completed({ allowEvent: true });\n            return;\n        }\n        const htmlContent = result.value;\n        const textContent = extractTextFromHtml(htmlContent);\n        // Also check the subject line for appointments\n        const subject = item.subject || '';\n        const fullContent = `${subject} ${textContent}`;\n        console.log('Scanning appointment content for sensitive keywords...');\n        const foundKeywords = scanForSensitiveKeywords(fullContent);\n        if (foundKeywords.length > 0) {\n            console.log('Sensitive keywords found:', foundKeywords);\n            const keywordList = foundKeywords.join(', ');\n            const errorMessage = `This appointment contains sensitive keywords (${keywordList}). Please review before sending.`;\n            // Block the send and show notification\n            event.completed({\n                allowEvent: false,\n                errorMessage: errorMessage\n            });\n        }\n        else {\n            console.log('No sensitive keywords found, allowing send');\n            // Allow the appointment to be sent\n            event.completed({ allowEvent: true });\n        }\n    });\n}\n// Register the event handlers\n(function () {\n    \"use strict\";\n    Office.onReady(() => {\n        console.log('Office.js is ready, registering event handlers');\n        // Make handlers available globally for manifest\n        window.onMessageSendHandler = onMessageSendHandler;\n        window.onAppointmentSendHandler = onAppointmentSendHandler;\n    });\n})();\n// Export for potential use in other modules\nexport { onMessageSendHandler, onAppointmentSendHandler, scanForSensitiveKeywords };\n"],"names":["SENSITIVE_KEYWORDS","scanForSensitiveKeywords","content","normalizedContent","toLowerCase","foundKeywords","keyword","includes","push","extractTextFromHtml","htmlContent","textContent","replace","trim","onMessageSendHandler","event","console","log","item","Office","context","mailbox","error","completed","allowEvent","body","getAsync","CoercionType","Html","result","status","AsyncResultStatus","Failed","value","length","keywordList","join","errorMessage","onAppointmentSendHandler","subject","fullContent","onReady","window"],"sourceRoot":""}