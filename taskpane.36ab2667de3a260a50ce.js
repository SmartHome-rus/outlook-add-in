(()=>{"use strict";(()=>{Office.onReady(e=>{e.host===Office.HostType.Outlook&&(console.log("Taskpane loaded successfully"),"confirm"===new URLSearchParams(window.location.search).get("mode")?(console.log("Initializing confirmation dialog mode"),function(){const e=document.getElementById("confirmation-dialog"),t=document.getElementById("taskpane-content");e&&t&&(e.classList.remove("hidden"),t.classList.add("hidden"))}()):(console.log("Initializing regular taskpane mode"),function(){const e=document.getElementById("confirmation-dialog"),t=document.getElementById("taskpane-content");e&&t&&(e.classList.add("hidden"),t.classList.remove("hidden"))}()),n=new t,n.addStatusListener(e=>{s(e)}),s(n.isOnline()))});class e{static analyzeContent(e){const t=e.toLowerCase().match(/\btest\b/g)||[];return{hasTestContent:t.length>0,testCount:t.length,contentLength:e.length,analysisTimestamp:new Date}}static getTestLocations(e){const t=e.split("\n"),n=[];return t.forEach((e,t)=>{e.toLowerCase().includes("test")&&n.push(t+1)}),n}}class t{constructor(){this.listeners=[],this.isCurrentlyOnline=navigator.onLine,this.setupEventListeners()}setupEventListeners(){window.addEventListener("online",()=>{this.isCurrentlyOnline=!0,this.notifyListeners(!0),console.log("Network: Online")}),window.addEventListener("offline",()=>{this.isCurrentlyOnline=!1,this.notifyListeners(!1),console.log("Network: Offline")})}isOnline(){return this.isCurrentlyOnline}addStatusListener(e){this.listeners.push(e)}notifyListeners(e){this.listeners.forEach(t=>t(e))}}let n;function s(e){document.querySelectorAll(".status-indicator").forEach(t=>{t.textContent?.includes("Warning")||t.textContent?.includes("✅")||(t.className="status-indicator "+(e?"status-online":"status-offline"),t.textContent="Status: "+(e?"Online":"Offline"))})}function o(e,t){const o=document.getElementById("taskpane-status");o&&(o.textContent=e,o.className="status-indicator "+(t?"status-online":"status-offline"),(t||e.includes("Error"))&&setTimeout(()=>{s(n?.isOnline()??!0)},5e3))}window.checkCurrentEmail=function(){const t=Office.context.mailbox.item;t?(o("Checking email content...",!0),t.body.getAsync(Office.CoercionType.Text,n=>{if(n.status===Office.AsyncResultStatus.Succeeded){const s=e.analyzeContent(n.value);if(s.hasTestContent){if(o(`⚠️ Warning: Found ${s.testCount} instance(s) of "test"`,!1),s.testCount>1){const t=e.getTestLocations(n.value);console.log("Test content found on lines:",t)}t.notificationMessages.addAsync("manual-check-warning",{type:Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,message:`Warning: Email contains "test" content (${s.testCount} instances) - review before sending`,icon:"Icon.16x16",persistent:!0})}else o('✅ Email content verified - no "test" found',!0),t.notificationMessages.removeAsync("manual-check-warning")}else o("Error: Unable to check email content",!1),console.error("Failed to get email body:",n.error)})):o("No email item found",!1)},window.validateXMLContent=class{static async validateConfiguration(e){try{const t=(new DOMParser).parseFromString(e,"application/xml").getElementsByTagName("parsererror");return t.length>0?(console.error("XML configuration error:",t[0].textContent),!1):(console.log("XML configuration is valid"),!0)}catch(e){return console.error("XML validation error:",e),!1}}static validateManifest(e){try{const t=(new DOMParser).parseFromString(e,"application/xml"),n=["OfficeApp","Id","Version","DisplayName"];for(const e of n)if(0===t.getElementsByTagName(e).length)return console.error(`Required manifest element '${e}' not found`),!1;return console.log("Manifest XML is compliant"),!0}catch(e){return console.error("Manifest validation error:",e),!1}}}.validateConfiguration})()})();
//# sourceMappingURL=taskpane.36ab2667de3a260a50ce.js.map